name: Snapshot Tests

on:
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'library/**'
      - '.github/workflows/snapshot-tests.yml'
  push:
    branches: [ main, master, develop ]
    paths:
      - 'library/**'
      - '.github/workflows/snapshot-tests.yml'
  workflow_dispatch:

jobs:
  snapshot-tests:
    name: Run Snapshot Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run snapshot tests
        id: snapshot_tests
        continue-on-error: true
        run: |
          echo "Running snapshot verification..."
          ./gradlew :library:verifyPaparazziDebug --no-daemon --stacktrace

      - name: Check for snapshot failures
        id: check_failures
        if: always()
        run: |
          # Check if there are any failure images
          FAILURE_DIR="library/out/failures"
          if [ -d "$FAILURE_DIR" ] && [ "$(ls -A $FAILURE_DIR)" ]; then
            echo "has_failures=true" >> $GITHUB_OUTPUT
            echo "❌ Snapshot tests failed - visual differences detected"

            # Count failures
            FAILURE_COUNT=$(find $FAILURE_DIR -name "*.png" | wc -l)
            echo "failure_count=$FAILURE_COUNT" >> $GITHUB_OUTPUT
            echo "Total failures: $FAILURE_COUNT"

            # List all failures
            echo ""
            echo "Failed snapshots:"
            find $FAILURE_DIR -name "*.png" | while read file; do
              basename "$file"
            done
          else
            echo "has_failures=false" >> $GITHUB_OUTPUT
            echo "✅ All snapshot tests passed!"
          fi

      - name: Upload snapshot failure report
        if: always() && steps.check_failures.outputs.has_failures == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-test-failures
          path: |
            library/out/failures/
            library/build/reports/paparazzi/
          retention-days: 30

      - name: Upload snapshot verification report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-test-report
          path: |
            library/build/reports/paparazzi/
          retention-days: 7

      - name: Comment PR with failure summary
        if: |
          always() &&
          github.event_name == 'pull_request' &&
          steps.check_failures.outputs.has_failures == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            const failureDir = 'library/out/failures';
            const failureCount = '${{ steps.check_failures.outputs.failure_count }}';

            let failures = [];
            if (fs.existsSync(failureDir)) {
              failures = fs.readdirSync(failureDir)
                .filter(f => f.endsWith('.png'))
                .map(f => `- \`${f}\``)
                .join('\n');
            }

            const body = `## ❌ Snapshot Tests Failed

            **Total failures:** ${failureCount}

            ### Failed Snapshots
            ${failures}

            ### What to do next:

            1. **Download the failure artifacts** from this workflow run
            2. **Review the visual differences** in the failure images
            3. **If changes are intentional:**
               - Run \`./gradlew :library:recordSnapshots\` locally
               - Commit the updated snapshots
               - Push the changes
            4. **If changes are unintentional:**
               - Fix the UI regression
               - Verify tests pass locally with \`./gradlew :library:verifySnapshots\`

            ### Artifacts
            - [Download snapshot failure report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            📖 See [SNAPSHOT_TESTING.md](./library/SNAPSHOT_TESTING.md) for more information.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Generate snapshot test summary
        if: always()
        run: |
          echo "## Snapshot Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check_failures.outputs.has_failures }}" == "true" ]; then
            echo "❌ **Status:** FAILED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Failures:** ${{ steps.check_failures.outputs.failure_count }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Failed Snapshots" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            find library/out/failures -name "*.png" | xargs -I {} basename {} >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Status:** PASSED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All snapshot tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Fail workflow if snapshots don't match
        if: steps.check_failures.outputs.has_failures == 'true'
        run: |
          echo "::error::Snapshot tests failed with ${{ steps.check_failures.outputs.failure_count }} differences"
          exit 1

  snapshot-comparison:
    name: Snapshot Comparison Report
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: snapshot-tests
    if: always() && github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate snapshot report
        run: |
          # Try to generate the snapshot report
          if ./gradlew :library:snapshotReport --no-daemon 2>&1 | tee report.txt; then
            echo "Report generated successfully"
          else
            echo "No snapshots found or report generation failed"
            echo "This is expected if snapshots haven't been recorded yet."
          fi

      - name: Comment PR with snapshot statistics
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            let reportContent = '';
            if (fs.existsSync('report.txt')) {
              reportContent = fs.readFileSync('report.txt', 'utf8');
            }

            const body = `## 📊 Snapshot Test Coverage

            ${reportContent ? '```\n' + reportContent + '\n```' : 'No snapshot report available yet. Run `./gradlew :library:recordSnapshots` to generate reference snapshots.'}

            ### Test Categories

            - ✅ **Component Tests** (~35 tests): Individual UI components (ColorWheel, Sliders, PreviewBox)
            - ✅ **ColorPicker Tests** (~15 tests): Full ColorPicker with various configurations
            - ✅ **Dialog Tests** (~15 tests): Dialogs and preference items
            - ✅ **Device Tests** (~20 tests): Multiple devices, orientations, and DPIs
            - ✅ **Locale Tests** (~14 tests): 14 languages including RTL support
            - ✅ **Theme Tests** (~12 tests): Light, dark, and custom themes

            **Total Coverage:** ~110+ snapshot tests

            📖 See [SNAPSHOT_TESTING.md](./library/SNAPSHOT_TESTING.md) for details.
            `;

            // Check if comment already exists
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const existingComment = comments.data.find(
              comment => comment.body.includes('📊 Snapshot Test Coverage')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
