name: Snapshot Tests

on:
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'library/**'
      - '.github/workflows/snapshot-tests.yml'
  push:
    branches: [ main, master, develop ]
    paths:
      - 'library/**'
      - '.github/workflows/snapshot-tests.yml'
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  # Check if comment is a snapshot command
  check-command:
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request
    runs-on: ubuntu-latest
    outputs:
      should-record: ${{ steps.check.outputs.should-record }}
      should-verify: ${{ steps.check.outputs.should-verify }}
      pr-number: ${{ steps.pr.outputs.number }}
      pr-ref: ${{ steps.pr.outputs.ref }}
    steps:
      - name: Check for snapshot commands
        id: check
        run: |
          COMMENT="${{ github.event.comment.body }}"
          # Trim whitespace for comparison
          COMMENT_TRIMMED=$(echo "$COMMENT" | xargs)

          echo "Comment received: '$COMMENT_TRIMMED'"

          if [[ "$COMMENT_TRIMMED" == "/record-snapshots" ]] || [[ "$COMMENT_TRIMMED" == "/update-snapshots" ]]; then
            echo "should-record=true" >> $GITHUB_OUTPUT
            echo "should-verify=false" >> $GITHUB_OUTPUT
            echo "Command matched: record snapshots"
          elif [[ "$COMMENT_TRIMMED" == "/verify-snapshots" ]]; then
            echo "should-record=false" >> $GITHUB_OUTPUT
            echo "should-verify=true" >> $GITHUB_OUTPUT
            echo "Command matched: verify snapshots"
          else
            echo "should-record=false" >> $GITHUB_OUTPUT
            echo "should-verify=false" >> $GITHUB_OUTPUT
            echo "No matching command found"
          fi

      - name: Get PR info
        if: steps.check.outputs.should-record == 'true' || steps.check.outputs.should-verify == 'true'
        id: pr
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}")
          PR_REF=$(echo "$PR_DATA" | jq -r .head.ref)
          echo "number=${PR_NUMBER}" >> $GITHUB_OUTPUT
          echo "ref=${PR_REF}" >> $GITHUB_OUTPUT

      - name: React to comment
        if: steps.check.outputs.should-record == 'true' || steps.check.outputs.should-verify == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ github.event.comment.id }},
              content: 'rocket'
            });

  # Record and commit snapshots (triggered by comment)
  record-snapshots:
    needs: check-command
    if: needs.check-command.outputs.should-record == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.check-command.outputs.pr-ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Record snapshots
        run: |
          echo "Recording snapshots..."
          ./gradlew :library:recordSnapshots --no-daemon --stacktrace

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No snapshot changes detected"
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Snapshot changes detected"
          fi

      - name: Commit and push snapshots
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add library/src/test/resources/roborazzi/
          git commit -m "Update snapshot tests

          ü§ñ Snapshots updated via GitHub Actions

          Triggered by: @${{ github.event.comment.user.login }}
          PR: #${{ needs.check-command.outputs.pr-number }}"
          git push

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const hasChanges = '${{ steps.check-changes.outputs.has-changes }}' === 'true';
            const body = hasChanges
              ? `‚úÖ Snapshots have been recorded and committed to this PR!\n\nThe reference snapshots have been updated. You can now push additional changes and the CI will verify against these new baselines.`
              : `‚ÑπÔ∏è No snapshot changes detected.\n\nAll snapshots match the current code. No updates were necessary.`;

            await github.rest.issues.createComment({
              issue_number: ${{ needs.check-command.outputs.pr-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # Verify snapshots on command (triggered by PR comment)
  verify-snapshots-on-command:
    needs: check-command
    if: needs.check-command.outputs.should-verify == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.check-command.outputs.pr-ref }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run snapshot verification
        id: verify
        continue-on-error: true
        run: |
          echo "Running snapshot verification..."
          ./gradlew :library:verifySnapshots --no-daemon --stacktrace

      - name: Check for snapshot failures
        id: check-failures
        if: always()
        run: |
          # Check for failure images
          FAILURE_DIR="library/build/outputs/roborazzi"
          if [ -d "$FAILURE_DIR" ] && find "$FAILURE_DIR" -name "*_compare.png" -o -name "*_actual.png" | grep -q .; then
            echo "has-failures=true" >> $GITHUB_OUTPUT
            echo "‚ùå Snapshot tests failed - visual differences detected"

            # Count failures
            FAILURE_COUNT=$(find "$FAILURE_DIR" -name "*_compare.png" -o -name "*_actual.png" | wc -l)
            echo "failure-count=$FAILURE_COUNT" >> $GITHUB_OUTPUT
            echo "Total failure images: $FAILURE_COUNT"
          else
            echo "has-failures=false" >> $GITHUB_OUTPUT
            echo "‚úÖ All snapshot tests passed!"
          fi

      - name: Upload snapshot failure report
        if: always() && steps.check-failures.outputs.has-failures == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-test-failures-manual-verify
          path: |
            library/build/outputs/roborazzi/
          retention-days: 30

      - name: Comment on PR with results
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const hasFailures = '${{ steps.check-failures.outputs.has-failures }}' === 'true';
            const failureCount = '${{ steps.check-failures.outputs.failure-count }}';

            let body;
            if (hasFailures) {
              body = `## ‚ùå Snapshot Verification Failed

            **Total failures:** ${failureCount} mismatched images

            ### What to do next:

            **Option 1: Update snapshots if changes are intentional**
            Comment \`/record-snapshots\` or \`/update-snapshots\` on this PR to automatically record and commit new snapshots.

            **Option 2: Fix the regression**
            1. Download the [failure artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) to see the differences
            2. Fix the unintended visual changes
            3. Push the changes and run \`/verify-snapshots\` again

            **Option 3: Update locally**
            \`\`\`bash
            ./gradlew :library:recordSnapshots
            git add library/src/test/resources/roborazzi/
            git commit -m "Update snapshots"
            git push
            \`\`\`

            ### Artifacts
            - [Download snapshot comparison images](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            üìñ See [library/SNAPSHOT_TESTING.md](./library/SNAPSHOT_TESTING.md) for more information.
            `;
            } else {
              body = `## ‚úÖ Snapshot Verification Passed

            All snapshot tests passed successfully! No visual regressions detected.

            üì∏ All UI components render correctly across all tested configurations.
            `;
            }

            await github.rest.issues.createComment({
              issue_number: ${{ needs.check-command.outputs.pr-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # Verify snapshots (triggered by PR/push)
  verify-snapshots:
    if: github.event_name != 'issue_comment'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run snapshot verification
        id: verify
        continue-on-error: true
        run: |
          echo "Running snapshot verification..."
          ./gradlew :library:verifySnapshots --no-daemon --stacktrace

      - name: Check for snapshot failures
        id: check-failures
        if: always()
        run: |
          # Check for failure images
          FAILURE_DIR="library/build/outputs/roborazzi"
          if [ -d "$FAILURE_DIR" ] && find "$FAILURE_DIR" -name "*_compare.png" -o -name "*_actual.png" | grep -q .; then
            echo "has-failures=true" >> $GITHUB_OUTPUT
            echo "‚ùå Snapshot tests failed - visual differences detected"

            # Count failures
            FAILURE_COUNT=$(find "$FAILURE_DIR" -name "*_compare.png" -o -name "*_actual.png" | wc -l)
            echo "failure-count=$FAILURE_COUNT" >> $GITHUB_OUTPUT
            echo "Total failure images: $FAILURE_COUNT"
          else
            echo "has-failures=false" >> $GITHUB_OUTPUT
            echo "‚úÖ All snapshot tests passed!"
          fi

      - name: Upload snapshot failure report
        if: always() && steps.check-failures.outputs.has-failures == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-test-failures
          path: |
            library/build/outputs/roborazzi/
          retention-days: 30

      - name: Comment PR with failure summary
        if: |
          always() &&
          github.event_name == 'pull_request' &&
          steps.check-failures.outputs.has-failures == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const failureCount = '${{ steps.check-failures.outputs.failure-count }}';

            const body = `## ‚ùå Snapshot Tests Failed

            **Total failures:** ${failureCount} mismatched images

            ### What to do next:

            **Option 1: Update snapshots if changes are intentional**
            Comment \`/record-snapshots\` or \`/update-snapshots\` on this PR to automatically record and commit new snapshots.

            **Option 2: Fix the regression**
            1. Download the [failure artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) to see the differences
            2. Fix the unintended visual changes
            3. Push the changes and the CI will re-verify

            **Option 3: Update locally**
            \`\`\`bash
            ./gradlew :library:recordSnapshots
            git add library/src/test/resources/roborazzi/
            git commit -m "Update snapshots"
            git push
            \`\`\`

            ### Artifacts
            - [Download snapshot comparison images](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            üìñ See [library/SNAPSHOT_TESTING.md](./library/SNAPSHOT_TESTING.md) for more information.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Comment PR with success
        if: |
          always() &&
          github.event_name == 'pull_request' &&
          steps.check-failures.outputs.has-failures == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `## ‚úÖ Snapshot Tests Passed

            All snapshot tests passed successfully! No visual regressions detected.

            üì∏ All UI components render correctly across all tested configurations.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Generate snapshot test summary
        if: always()
        run: |
          echo "## Snapshot Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check-failures.outputs.has-failures }}" == "true" ]; then
            echo "‚ùå **Status:** FAILED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Failures:** ${{ steps.check-failures.outputs.failure-count }} images" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### How to fix" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Comment \`/record-snapshots\` on this PR to update snapshots automatically." >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ **Status:** PASSED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All snapshot tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Fail workflow if snapshots don't match
        if: steps.check-failures.outputs.has-failures == 'true'
        run: |
          echo "::error::Snapshot tests failed with ${{ steps.check-failures.outputs.failure-count }} differences"
          exit 1
